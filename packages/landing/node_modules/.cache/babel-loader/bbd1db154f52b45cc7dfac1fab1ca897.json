{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jamesclark/Documents/react_project_1v2/node_modules/common/src/containers/SaasThree/Navbar/index.js\";\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Button from 'reusecore/src/elements/Button';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport Box from 'reusecore/src/elements/Box';\nimport HamburgMenu from '../../../components/HamburgMenu';\nimport Container from '../../../components/UI/Container';\nimport { DrawerContext } from '../../../contexts/DrawerContext';\nimport { MENU_ITEMS } from '../../../data/SaasThree';\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\nimport LogoImage from '../../../assets/image/saasThree/logo-white.png';\nimport LogoImageAlt from '../../../assets/image/saasThree/logo.png';\n\nvar Navbar = function Navbar(_ref) {\n  var navbarStyle = _ref.navbarStyle,\n      logoStyle = _ref.logoStyle,\n      button = _ref.button,\n      row = _ref.row,\n      menuWrapper = _ref.menuWrapper;\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Toggle drawer\n\n\n  var toggleHandler = function toggleHandler() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return React.createElement(NavbarWrapper, _extends({}, navbarStyle, {\n    className: \"saas_navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Box, _extends({}, row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Logo, {\n    href: \"#\",\n    logoSrc: LogosImage,\n    title: \"Logo\",\n    logoStyle: logoStyle,\n    className: \"main-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Logo, {\n    href: \"#\",\n    logoSrc: LogoImsageAlt,\n    title: \"Logo\",\n    logoStyle: logoStyle,\n    className: \"logo-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Box, _extends({}, menuWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(ScrollSpyMenu, {\n    className: \"main_menu\",\n    menuItems: MENU_ITEMS,\n    offset: -70,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: React.createElement(HamburgMenu, {\n      barColor: \"#fff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ScrollSpyMenu, {\n    className: \"mobile_menu\",\n    menuItems: MENU_ITEMS,\n    drawerClose: true,\n    offset: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))))));\n};\n\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  button: PropTypes.object,\n  row: PropTypes.object,\n  menuWrapper: PropTypes.object\n};\nNavbar.defaultProps = {\n  navbarStyle: {\n    minHeight: '70px',\n    display: 'block'\n  },\n  row: {\n    flexBox: true,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%'\n  },\n  logoStyle: {\n    maxWidth: ['120px', '130px']\n  },\n  button: {\n    type: 'button',\n    fontSize: '13px',\n    fontWeight: '700',\n    borderRadius: '4px',\n    pl: '15px',\n    pr: '15px',\n    colors: 'secondaryWithBg',\n    minHeight: 'auto',\n    height: '40px'\n  },\n  menuWrapper: {\n    flexBox: true,\n    alignItems: 'center'\n  }\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/jamesclark/Documents/react_project_1v2/node_modules/common/src/containers/SaasThree/Navbar/index.js"],"names":["React","useContext","Link","PropTypes","NavbarWrapper","Drawer","Button","Logo","Box","HamburgMenu","Container","DrawerContext","MENU_ITEMS","ScrollSpyMenu","LogoImage","LogoImageAlt","Navbar","navbarStyle","logoStyle","button","row","menuWrapper","state","dispatch","toggleHandler","type","LogosImage","LogoImsageAlt","isOpen","propTypes","object","defaultProps","minHeight","display","flexBox","justifyContent","alignItems","width","maxWidth","fontSize","fontWeight","borderRadius","pl","pr","colors","height"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\r\nimport Drawer from 'reusecore/src/elements/Drawer';\r\nimport Button from 'reusecore/src/elements/Button';\r\nimport Logo from 'reusecore/src/elements/UI/Logo';\r\nimport Box from 'reusecore/src/elements/Box';\r\nimport HamburgMenu from '../../../components/HamburgMenu';\r\nimport Container from '../../../components/UI/Container';\r\nimport { DrawerContext } from '../../../contexts/DrawerContext';\r\n\r\nimport { MENU_ITEMS } from '../../../data/SaasThree';\r\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\r\n\r\nimport LogoImage from '../../../assets/image/saasThree/logo-white.png';\r\nimport LogoImageAlt from '../../../assets/image/saasThree/logo.png';\r\n\r\nconst Navbar = ({ navbarStyle, logoStyle, button, row, menuWrapper }) => {\r\n  const { state, dispatch } = useContext(DrawerContext);\r\n\r\n  // Toggle drawer\r\n  const toggleHandler = () => {\r\n    dispatch({\r\n      type: 'TOGGLE',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NavbarWrapper {...navbarStyle} className=\"saas_navbar\">\r\n      <Container>\r\n        <Box {...row}>\r\n          <Logo\r\n            href=\"#\"\r\n            logoSrc={LogosImage}\r\n            title=\"Logo\"\r\n            logoStyle={logoStyle}\r\n            className=\"main-logo\"\r\n          />\r\n          <Logo\r\n            href=\"#\"\r\n            logoSrc={LogoImsageAlt}\r\n            title=\"Logo\"\r\n            logoStyle={logoStyle}\r\n            className=\"logo-alt\"\r\n          />\r\n          <Box {...menuWrapper}>\r\n            <ScrollSpyMenu\r\n              className=\"main_menu\"\r\n              menuItems={MENU_ITEMS}\r\n              offset={-70}\r\n            />\r\n            <Drawer\r\n              width=\"420px\"\r\n              placement=\"right\"\r\n              drawerHandler={<HamburgMenu barColor=\"#fff\" />}\r\n              open={state.isOpen}\r\n              toggleHandler={toggleHandler}\r\n            >\r\n              <ScrollSpyMenu\r\n                className=\"mobile_menu\"\r\n                menuItems={MENU_ITEMS}\r\n                drawerClose={true}\r\n                offset={-100}\r\n              />\r\n            </Drawer>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  navbarStyle: PropTypes.object,\r\n  logoStyle: PropTypes.object,\r\n  button: PropTypes.object,\r\n  row: PropTypes.object,\r\n  menuWrapper: PropTypes.object,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  navbarStyle: {\r\n    minHeight: '70px',\r\n    display: 'block',\r\n  },\r\n  row: {\r\n    flexBox: true,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  logoStyle: {\r\n    maxWidth: ['120px', '130px'],\r\n  },\r\n  button: {\r\n    type: 'button',\r\n    fontSize: '13px',\r\n    fontWeight: '700',\r\n    borderRadius: '4px',\r\n    pl: '15px',\r\n    pr: '15px',\r\n    colors: 'secondaryWithBg',\r\n    minHeight: 'auto',\r\n    height: '40px',\r\n  },\r\n  menuWrapper: {\r\n    flexBox: true,\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}