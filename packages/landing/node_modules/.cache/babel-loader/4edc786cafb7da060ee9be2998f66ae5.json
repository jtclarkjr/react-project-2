{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jamesclark/Documents/react_project_1v2/node_modules/common/src/components/Charts/ChartJPYLine.js\";\nimport React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport \"isomorphic-fetch\"; //current date plus 4 days before\n\nvar dateOne = new Date().getDate(); //Current Date\n\nvar dateTwo = new Date().getDate() - 1;\nvar dateThree = new Date().getDate() - 2;\nvar dateFour = new Date().getDate() - 3;\nvar dateFive = new Date().getDate() - 4;\nvar month = new Date().getMonth() + 1; //Current Month\n\nvar year = new Date().getFullYear(); //Current Year\n//dates formatted for endpoint param\n\nvar NOW = year + '-' + month + '-' + dateOne;\nvar DAY_2 = year + '-' + month + '-' + dateTwo;\nvar DAY_3 = year + '-' + month + '-' + dateThree;\nvar DAY_4 = year + '-' + month + '-' + dateFour;\nvar DAY_5 = year + '-' + month + '-' + dateFive; //api key from http://fixer.io\n\nvar API_KEY = 'ca9302a9f734543d577a146054788064';\nvar ENDPOINT = 'latest';\n\nvar ChartJPYLine =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartJPYLine, _Component);\n\n  function ChartJPYLine(props) {\n    var _this;\n\n    _classCallCheck(this, ChartJPYLine);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChartJPYLine).call(this, props));\n    _this.state = {\n      chartDataLinear: {}\n    };\n    return _this;\n  }\n\n  _createClass(ChartJPYLine, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var _this2 = this;\n\n      // API Calls have a limit of 1000 (based on the subscription free plan from fixer.io)\n      _Promise.all([fetch(\"http://data.fixer.io/api/\".concat(ENDPOINT, \"?access_key=\").concat(API_KEY)), fetch(\"https://api.exchangeratesapi.io/\".concat(DAY_2)), fetch(\"https://api.exchangeratesapi.io/\".concat(DAY_3)), fetch(\"https://api.exchangeratesapi.io/\".concat(DAY_4)), fetch(\"https://api.exchangeratesapi.io/\".concat(DAY_5))]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 5),\n            res1 = _ref2[0],\n            res2 = _ref2[1],\n            res3 = _ref2[2],\n            res4 = _ref2[3],\n            res5 = _ref2[4];\n\n        return _Promise.all([res1.json(), res2.json(), res3.json(), res4.json(), res5.json()]);\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 5),\n            data1 = _ref4[0],\n            data2 = _ref4[1],\n            data3 = _ref4[2],\n            data4 = _ref4[3],\n            data5 = _ref4[4];\n\n        return _this2.setState({\n          //Chart data controllers\n          chartDataLinear: {\n            labels: [DAY_5, DAY_4, DAY_3, DAY_2, NOW],\n            datasets: [{\n              data: [data5.rates.JPY, data4.rates.JPY, data3.rates.JPY, data2.rates.JPY, data1.rates.JPY],\n              backgroundColor: ['rgba(255, 99, 132, 0.0)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 1)'],\n              borderWidth: 3\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ChartJPYLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.chartDataLinear,\n        options: {\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.textTitle,\n            fontSize: 25\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: this.props.legendPosition\n          },\n          scale: {\n            barThickness: [{\n              barPercentage: 0.4\n            }]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChartJPYLine;\n}(Component);\n\n_defineProperty(ChartJPYLine, \"defaultProps\", {\n  displayTitle: true,\n  textTitle: 'Past 5 days for JPY rates (EUR = 1)',\n  displayLegend: false,\n  legendPosition: 'bottom'\n});\n\nexport default ChartJPYLine;","map":{"version":3,"sources":["/Users/jamesclark/Documents/react_project_1v2/node_modules/common/src/components/Charts/ChartJPYLine.js"],"names":["React","Component","Line","dateOne","Date","getDate","dateTwo","dateThree","dateFour","dateFive","month","getMonth","year","getFullYear","NOW","DAY_2","DAY_3","DAY_4","DAY_5","API_KEY","ENDPOINT","ChartJPYLine","props","state","chartDataLinear","getChartData","all","fetch","then","res1","res2","res3","res4","res5","json","data1","data2","data3","data4","data5","setState","labels","datasets","data","rates","JPY","backgroundColor","borderColor","borderWidth","title","display","displayTitle","text","textTitle","fontSize","legend","displayLegend","position","legendPosition","scale","barThickness","barPercentage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport \"isomorphic-fetch\"\n\n//current date plus 4 days before\nlet dateOne = new Date().getDate(); //Current Date\nlet dateTwo = new Date().getDate() - 1;\nlet dateThree = new Date().getDate() - 2;\nlet dateFour = new Date().getDate() - 3;\nlet dateFive = new Date().getDate() - 4;\n\nlet month = new Date().getMonth() + 1; //Current Month\nlet year = new Date().getFullYear(); //Current Year\n\n//dates formatted for endpoint param\nconst NOW = year + '-' + month + '-' + dateOne;\nconst DAY_2 = year + '-' + month + '-' + dateTwo;\nconst DAY_3 = year + '-' + month + '-' + dateThree;\nconst DAY_4 = year + '-' + month + '-' + dateFour;\nconst DAY_5 = year + '-' + month + '-' + dateFive;\n\n//api key from http://fixer.io\nconst API_KEY = 'ca9302a9f734543d577a146054788064';\nconst ENDPOINT = 'latest';\n\nclass ChartJPYLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      chartDataLinear: {}\n\t\t}\n\t}\n\t\n\tcomponentWillMount(){\n\t\tthis.getChartData();\n\t}\n\t  \n\tgetChartData(){\n\t\t// API Calls have a limit of 1000 (based on the subscription free plan from fixer.io)\n\t\tPromise.all([\n\t\t\tfetch(`http://data.fixer.io/api/${ENDPOINT}?access_key=${API_KEY}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_2}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_3}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_4}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_5}`),\n\t\t])\n\t\t.then(([res1, res2, res3, res4, res5]) => Promise.all([res1.json(), res2.json(), res3.json(), res4.json(), res5.json()]))\n\t\t.then(([data1, data2, data3, data4, data5]) => this.setState({\n\t\t\t//Chart data controllers\n\t\t\tchartDataLinear: {\n\t\t\tlabels: [DAY_5, DAY_4, DAY_3, DAY_2, NOW,],\n\t\t\tdatasets:[ \n\t\t\t\t{\n\t\t\t\tdata: [\n\t\t\t\t\tdata5.rates.JPY, \n\t\t\t\t\tdata4.rates.JPY, \n\t\t\t\t\tdata3.rates.JPY, \n\t\t\t\t\tdata2.rates.JPY, \n\t\t\t\t\tdata1.rates.JPY,\n\t\t\t\t],\n\t\t\t\tbackgroundColor: [\n\t\t\t\t\t'rgba(255, 99, 132, 0.0)',\n\t\t\t\t],\n\t\t\t\tborderColor: [\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t],\n\t\t\t\tborderWidth: 3\n\t\t\t},\n\t\t\t\t\n\t\t\t]}\n\t\t}));        \n\t}\n\n\tstatic defaultProps = {\n\t\tdisplayTitle: true,\n\t\ttextTitle: 'Past 5 days for JPY rates (EUR = 1)',\n\t\tdisplayLegend: false,\n\t\tlegendPosition: 'bottom',\n\t}\n\n\trender() {\n\t\treturn ( \n\t\t<div className = \"ChartJPYLine\">\n\t\t\t<Line \n\t\t\t\tdata = {this.state.chartDataLinear}\n\t\t\t\toptions = {{\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: this.props.displayTitle,\n\t\t\t\t\t\ttext: this.props.textTitle,\n\t\t\t\t\t\tfontSize: 25\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: this.props.displayLegend,\n\t\t\t\t\t\tposition: this.props.legendPosition\n\t\t\t\t\t},\n\t\t\t\t\tscale: {\n\t\t\t\t\t\tbarThickness: [{\n\t\t\t\t\t\t\tbarPercentage: 0.4\n\t\t\t\t\t\t}]\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/> \n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ChartJPYLine;"]},"metadata":{},"sourceType":"module"}