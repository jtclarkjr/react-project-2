{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jamesclark/Downloads/demo/node_modules/common/src/containers/App/Navbar/index.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Button from 'reusecore/src/elements/Button';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport HamburgMenu from '../../../components/HamburgMenu';\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\nimport LogoImage from '../../../assets/image/app/logo.png';\nimport { DrawerContext } from '../../../contexts/DrawerContext';\nimport data from '../../../data/App/MenuItems'; // Default close button for modal\n\nvar CloseModalButton = function CloseModalButton() {\n  return React.createElement(Button, {\n    className: \"modalCloseBtn\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-plus-symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n};\n\nvar CloseModalButtonAlt = function CloseModalButtonAlt() {\n  return React.createElement(Button, {\n    className: \"modalCloseBtn alt\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-plus-symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n};\n\nvar Navbar = function Navbar(_ref) {\n  var navbarStyle = _ref.navbarStyle,\n      logoStyle = _ref.logoStyle,\n      buttonStyle = _ref.buttonStyle;\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Search modal handler\n\n\n  var handleSearchModal = function handleSearchModal() {\n    openModal({\n      config: {\n        className: 'search-modal',\n        disableDragging: true,\n        default: {\n          width: '100%',\n          height: '100%',\n          x: 0,\n          y: 0\n        }\n      },\n      component: SearchPanel,\n      componentProps: {},\n      closeComponent: CloseModalButtonAlt,\n      closeOnClickOutside: false\n    });\n  }; // Authentication modal handler\n\n\n  var handleLoginModal = function handleLoginModal() {\n    openModal({\n      config: {\n        className: 'login-modal',\n        disableDragging: true,\n        default: {\n          width: '100%',\n          height: '100%',\n          x: 0,\n          y: 0\n        }\n      },\n      component: LoginModal,\n      componentProps: {},\n      closeComponent: CloseModalButton,\n      closeOnClickOutside: false\n    });\n  }; // Toggle drawer\n\n\n  var toggleHandler = function toggleHandler() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return React.createElement(NavbarWrapper, _extends({}, navbarStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    href: \"#\",\n    logoSrc: LogoImage,\n    title: \"Agency\",\n    logoStyle: logoStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"textButton\",\n    onClick: handleSearchModal,\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-magnifying-glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"textButton\",\n    onClick: handleLoginModal,\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: React.createElement(HamburgMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(ScrollSpyMenu, {\n    menuItems: data.menuItems,\n    drawerClose: true,\n    offset: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })))));\n}; // Navbar style props\n\n\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  wrapperStyle2: PropTypes.object\n};\nNavbar.defaultProps = {\n  navbarStyle: {\n    minHeight: '70px'\n  },\n  logoStyle: {\n    width: ['100px', '140px']\n  },\n  buttonStyle: {\n    minHeight: '70px',\n    color: '#fff'\n  }\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/jamesclark/Downloads/demo/node_modules/common/src/containers/App/Navbar/index.js"],"names":["React","useContext","PropTypes","NavbarWrapper","Drawer","Button","Logo","HamburgMenu","ScrollSpyMenu","Container","openModal","closeModal","SearchPanel","LoginModal","LogoImage","DrawerContext","data","CloseModalButton","CloseModalButtonAlt","Navbar","navbarStyle","logoStyle","buttonStyle","state","dispatch","handleSearchModal","config","className","disableDragging","default","width","height","x","y","component","componentProps","closeComponent","closeOnClickOutside","handleLoginModal","toggleHandler","type","display","alignItems","isOpen","menuItems","propTypes","object","wrapperStyle2","defaultProps","minHeight","color"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\r\nimport Drawer from 'reusecore/src/elements/Drawer';\r\nimport Button from 'reusecore/src/elements/Button';\r\nimport Logo from 'reusecore/src/elements/UI/Logo';\r\nimport HamburgMenu from '../../../components/HamburgMenu';\r\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\r\nimport { Container } from './navbar.style';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport SearchPanel from '../SearchPanel';\r\nimport LoginModal from '../LoginModal';\r\n\r\nimport LogoImage from '../../../assets/image/app/logo.png';\r\n\r\nimport { DrawerContext } from '../../../contexts/DrawerContext';\r\n\r\nimport data from '../../../data/App/MenuItems';\r\n\r\n// Default close button for modal\r\nconst CloseModalButton = () => (\r\n  <Button\r\n    className=\"modalCloseBtn\"\r\n    variant=\"fab\"\r\n    onClick={() => closeModal()}\r\n    icon={<i className=\"flaticon-plus-symbol\" />}\r\n  />\r\n);\r\nconst CloseModalButtonAlt = () => (\r\n  <Button\r\n    className=\"modalCloseBtn alt\"\r\n    variant=\"fab\"\r\n    onClick={() => closeModal()}\r\n    icon={<i className=\"flaticon-plus-symbol\" />}\r\n  />\r\n);\r\nconst Navbar = ({ navbarStyle, logoStyle, buttonStyle }) => {\r\n  const { state, dispatch } = useContext(DrawerContext);\r\n  // Search modal handler\r\n  const handleSearchModal = () => {\r\n    openModal({\r\n      config: {\r\n        className: 'search-modal',\r\n        disableDragging: true,\r\n        default: {\r\n          width: '100%',\r\n          height: '100%',\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      },\r\n      component: SearchPanel,\r\n      componentProps: {},\r\n      closeComponent: CloseModalButtonAlt,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n  // Authentication modal handler\r\n  const handleLoginModal = () => {\r\n    openModal({\r\n      config: {\r\n        className: 'login-modal',\r\n        disableDragging: true,\r\n        default: {\r\n          width: '100%',\r\n          height: '100%',\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      },\r\n      component: LoginModal,\r\n      componentProps: {},\r\n      closeComponent: CloseModalButton,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n  // Toggle drawer\r\n  const toggleHandler = () => {\r\n    dispatch({\r\n      type: 'TOGGLE',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NavbarWrapper {...navbarStyle}>\r\n      <Container>\r\n        <Logo\r\n          href=\"#\"\r\n          logoSrc={LogoImage}\r\n          title=\"Agency\"\r\n          logoStyle={logoStyle}\r\n        />\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Button\r\n            variant=\"textButton\"\r\n            onClick={handleSearchModal}\r\n            icon={<i className=\"flaticon-magnifying-glass\" />}\r\n          />\r\n          <Button\r\n            variant=\"textButton\"\r\n            onClick={handleLoginModal}\r\n            icon={<i className=\"flaticon-user\" />}\r\n          />\r\n          <Drawer\r\n            width=\"420px\"\r\n            placement=\"right\"\r\n            drawerHandler={<HamburgMenu />}\r\n            open={state.isOpen}\r\n            toggleHandler={toggleHandler}\r\n          >\r\n            <ScrollSpyMenu\r\n              menuItems={data.menuItems}\r\n              drawerClose={true}\r\n              offset={-100}\r\n            />\r\n          </Drawer>\r\n        </div>\r\n      </Container>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\n// Navbar style props\r\nNavbar.propTypes = {\r\n  navbarStyle: PropTypes.object,\r\n  logoStyle: PropTypes.object,\r\n  buttonStyle: PropTypes.object,\r\n  wrapperStyle2: PropTypes.object,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  navbarStyle: {\r\n    minHeight: '70px',\r\n  },\r\n  logoStyle: {\r\n    width: ['100px', '140px'],\r\n  },\r\n  buttonStyle: {\r\n    minHeight: '70px',\r\n    color: '#fff',\r\n  },\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}