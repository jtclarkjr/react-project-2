{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jamesclark/Downloads/demo/node_modules/common/src/components/charts/ChartJPY.js\";\nimport React, { Component } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport \"isomorphic-fetch\";\nvar API_KEY = 'ca9302a9f734543d577a146054788064';\n\nvar ChartJPY =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartJPY, _Component);\n\n  function ChartJPY(props) {\n    var _this;\n\n    _classCallCheck(this, ChartJPY);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChartJPY).call(this, props));\n    _this.state = {\n      chartJPY: {}\n    };\n    return _this;\n  }\n\n  _createClass(ChartJPY, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var _this2 = this;\n\n      fetch(\"http://data.fixer.io/api/latest?access_key=\".concat(API_KEY)).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          jsonData: json,\n          chartJPY: {\n            labels: ['AED', 'JPY', 'AFN'],\n            datasets: [{\n              data: [json.rates.AED, json.rates.JPY, json.rates.AFN]\n            }]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ChartJPY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.state.chartJPY,\n        options: {\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.textTitle,\n            fontSize: 25\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: this.props.legendPosition\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChartJPY;\n}(Component);\n\n_defineProperty(ChartJPY, \"defaultProps\", {\n  displayTitle: true,\n  textTitle: 'JPY Rates',\n  displayLegend: false,\n  legendPosition: 'bottom'\n});\n\nexport default ChartJPY;","map":{"version":3,"sources":["/Users/jamesclark/Downloads/demo/node_modules/common/src/components/charts/ChartJPY.js"],"names":["React","Component","Bar","API_KEY","ChartJPY","props","state","chartJPY","getChartData","fetch","then","res","json","setState","jsonData","labels","datasets","data","rates","AED","JPY","AFN","title","display","displayTitle","text","textTitle","fontSize","legend","displayLegend","position","legendPosition"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAO,kBAAP;AAGA,IAAMC,OAAO,GAAG,kCAAhB;;IAEMC,Q;;;;;AACL,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE;AADE,KAAb;AAFkB;AAKlB;;;;yCAEmB;AACnB,WAAKC,YAAL;AACA;;;mCAEc;AAAA;;AACZC,MAAAA,KAAK,sDAA+CN,OAA/C,EAAL,CACDO,IADC,CACI,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADP,EAEDF,IAFC,CAEI,UAAAE,IAAI,EAAI;AACb,QAAA,MAAI,CAACC,QAAL,CAAc;AACbC,UAAAA,QAAQ,EAAEF,IADG;AAEbL,UAAAA,QAAQ,EAAE;AACTQ,YAAAA,MAAM,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,CADC;AAETC,YAAAA,QAAQ,EAAC,CACR;AACCC,cAAAA,IAAI,EAAC,CAAEL,IAAI,CAACM,KAAL,CAAWC,GAAb,EAAkBP,IAAI,CAACM,KAAL,CAAWE,GAA7B,EAAkCR,IAAI,CAACM,KAAL,CAAWG,GAA7C;AADN,aADQ;AAFA;AAFG,SAAd;AAWA,OAdC;AAeD;;;6BASO;AACR,aACA;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,GAAD;AACC,QAAA,IAAI,EAAI,KAAKf,KAAL,CAAWC,QADpB;AAEC,QAAA,OAAO,EAAI;AACVe,UAAAA,KAAK,EAAE;AACNC,YAAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWmB,YADd;AAENC,YAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWqB,SAFX;AAGNC,YAAAA,QAAQ,EAAE;AAHJ,WADG;AAMVC,UAAAA,MAAM,EAAE;AACPL,YAAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWwB,aADb;AAEPC,YAAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAW0B;AAFd;AANE,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADA;AAkBA;;;;EAxDqB9B,S;;gBAAjBG,Q,kBA8BiB;AACrBoB,EAAAA,YAAY,EAAE,IADO;AAErBE,EAAAA,SAAS,EAAE,WAFU;AAGrBG,EAAAA,aAAa,EAAE,KAHM;AAIrBE,EAAAA,cAAc,EAAE;AAJK,C;;AA6BvB,eAAe3B,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport \"isomorphic-fetch\"\n\n\nconst API_KEY = 'ca9302a9f734543d577a146054788064';\n\nclass ChartJPY extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchartJPY: {}\n\t\t}\n\t}\n\t\n\tcomponentWillMount(){\n\t\tthis.getChartData();\n\t}\n\t  \n  getChartData(){\n    fetch(`http://data.fixer.io/api/latest?access_key=${API_KEY}`)\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tthis.setState({\n\t\t\t\tjsonData: json,\n\t\t\t\tchartJPY: {\n\t\t\t\t\tlabels: ['AED','JPY','AFN'],\n\t\t\t\t\tdatasets:[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata:[ json.rates.AED, json.rates.JPY, json.rates.AFN ]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t})\n\t\t});\n  }\n\n\tstatic defaultProps = {\n\t\tdisplayTitle: true,\n\t\ttextTitle: 'JPY Rates',\n\t\tdisplayLegend: false,\n\t\tlegendPosition: 'bottom',\n\t}\n\n\trender() {\n\t\treturn ( \n\t\t<div className = \"ChartJPY\">\n\t\t\t<Bar \n\t\t\t\tdata = {this.state.chartJPY}\n\t\t\t\toptions = {{\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: this.props.displayTitle,\n\t\t\t\t\t\ttext: this.props.textTitle,\n\t\t\t\t\t\tfontSize: 25\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: this.props.displayLegend,\n\t\t\t\t\t\tposition: this.props.legendPosition\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/> \n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ChartJPY;"]},"metadata":{},"sourceType":"module"}