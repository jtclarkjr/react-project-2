{"version":3,"file":"static/webpack/static/development/pages/index.js.5e3cf7a592059a14923f.hot-update.js","sources":["webpack:////Users/jamesclark/Documents/react_project_1v2/node_modules/common/src/components/Charts/ChartJPYLine.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport \"isomorphic-fetch\"\n\n//current date plus 4 days before\nlet dateOne = new Date().getDate(); //Current Date\nlet dateTwo = new Date().getDate() - 1;\nlet dateThree = new Date().getDate() - 2;\nlet dateFour = new Date().getDate() - 3;\nlet dateFive = new Date().getDate() - 4;\n\nlet month = new Date().getMonth() + 1; //Current Month\nlet year = new Date().getFullYear(); //Current Year\n\n//dates formatted for endpoint param\nconst NOW = year + '-' + month + '-' + dateOne;\nconst DAY_2 = year + '-' + month + '-' + dateTwo;\nconst DAY_3 = year + '-' + month + '-' + dateThree;\nconst DAY_4 = year + '-' + month + '-' + dateFour;\nconst DAY_5 = year + '-' + month + '-' + dateFive;\n\n//api key from http://fixer.io\nconst API_KEY = 'ca9302a9f734543d577a146054788064';\nconst ENDPOINT = 'latest';\n\nclass ChartJPYLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      chartDataLinear: {}\n\t\t}\n\t}\n\t\n\tcomponentWillMount(){\n\t\tthis.getChartData();\n\t}\n\t  \n\tgetChartData(){\n\t\t// API Calls have a limit of 1000 (based on the subscription free plan from fixer.io)\n\t\tPromise.all([\n\t\t\tfetch(`http://data.fixer.io/api/${ENDPOINT}?access_key=${API_KEY}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_2}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_3}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_4}`),\n\t\t\tfetch(`https://api.exchangeratesapi.io/${DAY_5}`),\n\t\t])\n\t\t.then(([res1, res2, res3, res4, res5]) => Promise.all([res1.json(), res2.json(), res3.json(), res4.json(), res5.json()]))\n\t\t.then(([data1, data2, data3, data4, data5]) => this.setState({\n\t\t\t//Chart data controllers\n\t\t\tchartDataLinear: {\n\t\t\tlabels: [DAY_5, DAY_4, DAY_3, DAY_2, NOW,],\n\t\t\tdatasets:[ \n\t\t\t\t{\n\t\t\t\tdata: [\n\t\t\t\t\tdata5.rates.JPY, \n\t\t\t\t\tdata4.rates.JPY, \n\t\t\t\t\tdata3.rates.JPY, \n\t\t\t\t\tdata2.rates.JPY, \n\t\t\t\t\tdata1.rates.JPY,\n\t\t\t\t],\n\t\t\t\tbackgroundColor: [\n\t\t\t\t\t'rgba(255, 99, 132, 0.0)',\n\t\t\t\t],\n\t\t\t\tborderColor: [\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\n\t\t\t\t],\n\t\t\t\tborderWidth: 3\n\t\t\t},\n\t\t\t\t\n\t\t\t]}\n\t\t}));        \n\t}\n\n\tstatic defaultProps = {\n\t\tdisplayTitle: true,\n\t\ttextTitle: 'Past 5 days for JPY rates (EUR = 1)',\n\t\tdisplayLegend: false,\n\t\tlegendPosition: 'bottom',\n\t}\n\n\trender() {\n\t\treturn ( \n\t\t<div className = \"ChartJPYLine\">\n\t\t\t<Line \n\t\t\t\tdata = {this.state.chartDataLinear}\n\t\t\t\toptions = {{\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: this.props.displayTitle,\n\t\t\t\t\t\ttext: this.props.textTitle,\n\t\t\t\t\t\tfontSize: 25\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: this.props.displayLegend,\n\t\t\t\t\t\tposition: this.props.legendPosition\n\t\t\t\t\t},\n\t\t\t\t\tscale: {\n\t\t\t\t\t\tbarThickness: [{\n\t\t\t\t\t\t\tbarPercentage: 0.4\n\t\t\t\t\t\t}]\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/> \n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ChartJPYLine;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAGA;AAOA;AAlBA;AAHA;AAFA;AAAA;AA4BA;;;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AAVA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;;;;AAnFA;AACA;AADA;AAqDA;AACA;AACA;AACA;AAJA;AACA;AAiCA;;;;A","sourceRoot":""}